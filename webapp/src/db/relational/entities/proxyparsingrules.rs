//! `SeaORM` Entity. Generated by sea-orm-codegen 0.12.15

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "proxyparsingrules")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub id: i32,
    pub source_id: i32,
    #[sea_orm(column_type = "Text")]
    pub table_name: String,
    #[sea_orm(column_type = "Text")]
    pub head: String,
    #[sea_orm(column_type = "Text")]
    pub row: String,
    #[sea_orm(column_type = "Text")]
    pub data: String,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(
        belongs_to = "super::proxysources::Entity",
        from = "Column::SourceId",
        to = "super::proxysources::Column::Id",
        on_update = "NoAction",
        on_delete = "Cascade"
    )]
    Proxysources,
}

impl Related<super::proxysources::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Proxysources.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
